--- a/src/lib/ovsdb/src/ovsdb_sync_api.c
+++ b/src/lib/ovsdb/src/ovsdb_sync_api.c
@@ -492,7 +492,7 @@ int ovsdb_sync_mutate_uuid_set(const cha
     json_t * js;
     json_t * js_mutations;
 
-    LOG(INFO, "Mutate: %s %s %d %s", table, column, op, uuid);
+    LOG(DEBUG, "Mutate: %s %s %d %s", table, column, op, uuid);
 
     js = ovsdb_mutation(column,
             ovsdb_tran_operation(op),
--- a/src/sm/src/sm_scan_schedule.c
+++ b/src/sm/src/sm_scan_schedule.c
@@ -230,7 +230,7 @@ bool sm_scan_schedule_process(
                 sm_scan_schedule_cb,
                 scan_ctx);
     if (true != rc) {
-        LOG(ERR,
+        LOG(DEBUG,
             "Scheduling %s %s %d scan",
             radio_get_name_from_type(request_ctx->radio_cfg->type),
             radio_get_scan_name_from_type(request_ctx->scan_type),
--- a/src/sm/src/sm_survey_report.c
+++ b/src/sm/src/sm_survey_report.c
@@ -1004,7 +1004,7 @@ bool sm_survey_threshold_util_cb (
 
     rc = sm_scan_schedule(&scan_request);
     if (true != rc) {
-        LOGE("Processing %s %s %d survey (Failed to schedule scan)",
+        LOGD("Processing %s %s %d survey (Failed to schedule scan)",
              radio_get_name_from_cfg(radio_cfg_ctx),
              radio_get_scan_name_from_type(scan_type),
              *scan_chan);
@@ -1153,7 +1153,7 @@ bool sm_survey_stats_update (
 
     rc = sm_scan_schedule(&scan_request);
     if (true != rc) {
-        LOG(ERR,
+        LOG(DEBUG,
             "Processing %s %s %d survey ",
             radio_get_name_from_cfg(radio_cfg_ctx),
             radio_get_scan_name_from_type(scan_type),
--- a/src/wm2/src/wm2_radio.c
+++ b/src/wm2/src/wm2_radio.c
@@ -517,7 +517,7 @@ wm2_radio_update_port_state_set_inactive
 
 #define CMP(cmp, name) \
     (changed |= (changedf->name = ((cmp(conf, state, name, changedf->_uuid)) && \
-                                   (LOGI("%s: '%s' changed", conf->if_name, #name), 1))))
+                                   (LOGT("%s: '%s' changed", conf->if_name, #name), 1))))
 
 static bool
 wm2_vconf_changed(const struct schema_Wifi_VIF_Config *conf,
@@ -559,7 +559,7 @@ wm2_vconf_changed(const struct schema_Wi
     CMP(CHANGED_SET_CASE, captive_allowlist);
 
     if (changed)
-        LOGD("%s: changed (forced=%d)", conf->if_name, changedf->_uuid);
+        LOGT("%s: changed (forced=%d)", conf->if_name, changedf->_uuid);
 
     return changed;
 }
@@ -597,7 +597,7 @@ wm2_rconf_changed(const struct schema_Wi
     CMP(CHANGED_MAP_STRSTR, custom_options);
 
     if (changed)
-        LOGD("%s: changed (forced=%d)", conf->if_name, changedf->_uuid);
+        LOGT("%s: changed (forced=%d)", conf->if_name, changedf->_uuid);
 
     return changed;
 }
@@ -1351,7 +1351,7 @@ wm2_op_vstate(const struct schema_Wifi_V
                                   SCHEMA_COLUMN(Wifi_VIF_State, if_name),
                                   state.if_name);
     }
-    LOGI("%s: updated vif state", state.if_name);
+    LOGD("%s: updated vif state", state.if_name);
 recalc:
     /* Reconnect workaround is for CAES-771 */
     if (wm2_sta_has_reconnected(&oldstate, &state))
@@ -1392,7 +1392,7 @@ wm2_op_rstate(const struct schema_Wifi_R
     }
 
     REQUIRE(state.if_name, 1 == ovsdb_table_upsert_f(&table_Wifi_Radio_State, &state, false, NULL));
-    LOGI("%s: updated radio state", state.if_name);
+    LOGD("%s: updated radio state", state.if_name);
     wm2_delayed_recalc(wm2_rconf_recalc, state.if_name);
 }
 
